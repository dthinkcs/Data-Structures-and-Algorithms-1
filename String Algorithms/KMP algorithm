// S and T - input strings
// You need to check if string T is present in S or not
#include<bits/stdc++.h>
using namespace std;
int * getlps(char s[])
{
    int l=strlen(s);
    int *arr=new int [l];
    int i=1;
    int j=0;
    arr[0]=0;
    while(i<l)
    {
        if(s[i]==s[j])
        {
            j++;
            arr[i++]=j;
        }
        else
        {
            if(j!=0)
            {
                j=arr[j-1];
                
            }
            else
               {
                arr[i]=0;
                i++;
        }}
    }
    return arr;
}
int helpstr(int *arr,char s[],char t[])
{
    int sl=strlen(s);
    int  tl=strlen(t);
    int i=0,j=0;
    while(i<sl && j<tl)
    {    
        
        if(s[i]==t[j])
        {
            i++;
            j++;
        }
        else{
            if(j!=0)
            {
                j=arr[j-1];
            }
            else 
                i++;
        }
    }
    if(j==tl)
        return (i-j);
    else 
        return -1;
    
}

int findString(char s[], char t[]) {
    int *arr=getlps(s);
   return helpstr(arr,s,t);
}


int main() {
    char S[1000], T[1000];
    cin.getline(S, 1000);
    cin.getline(T, 1000);
    cout << findString(S, T) << endl;
}

